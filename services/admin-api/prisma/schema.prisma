// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// BFF-specific models - Minimal database for caching and monitoring only
// Authentication is handled by auth-service

// Response caching for aggregated data from microservices
model ResponseCache {
  id            String   @id @default(cuid())
  key           String   @unique
  data          Json
  expiresAt     DateTime
  createdAt     DateTime @default(now())
  tags          String[] // for cache invalidation

  @@index([key, expiresAt])
  @@index([tags])
  @@map("response_cache")
}

// Service health monitoring for BFF
model ServiceHealth {
  id            String   @id @default(cuid())
  serviceName   String   @unique
  status        ServiceStatus @default(UNKNOWN)
  lastCheckedAt DateTime @default(now())
  responseTime  Int?     // in milliseconds
  errorMessage  String?
  endpoint      String?
  updatedAt     DateTime @updatedAt

  @@map("service_health")
}

// Admin activity logging (optional - for audit purposes)
model AdminActivityLog {
  id            String   @id @default(cuid())
  adminUserId   String   // From auth-service
  action        String   
  resource      String   
  resourceId    String?
  details       Json?
  ipAddress     String?
  userAgent     String?
  createdAt     DateTime @default(now())

  @@index([adminUserId, createdAt])
  @@index([resource, action])
  @@map("admin_activity_logs")
}

// Enums
enum ServiceStatus {
  HEALTHY
  DEGRADED
  DOWN
  UNKNOWN
}