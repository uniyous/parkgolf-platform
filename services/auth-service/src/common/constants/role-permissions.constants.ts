import {
  PLATFORM_PERMISSIONS,
  COMPANY_PERMISSIONS,
  COURSE_PERMISSIONS,
  GENERAL_PERMISSIONS,
  SUPPORT_PERMISSIONS,
  USER_PERMISSIONS,
  ADMIN_PERMISSIONS_ARRAY,
  Permission,
} from './permissions.constants';

/**
 * 역할별 권한 매핑
 * 각 역할이 가질 수 있는 권한들을 정의합니다.
 */

// 관리자 역할 정의
export const ADMIN_ROLES = {
  PLATFORM_OWNER: 'PLATFORM_OWNER',
  PLATFORM_ADMIN: 'PLATFORM_ADMIN', 
  PLATFORM_SUPPORT: 'PLATFORM_SUPPORT',
  PLATFORM_ANALYST: 'PLATFORM_ANALYST',
  COMPANY_OWNER: 'COMPANY_OWNER',
  COMPANY_MANAGER: 'COMPANY_MANAGER',
  COURSE_MANAGER: 'COURSE_MANAGER',
  STAFF: 'STAFF',
  READONLY_STAFF: 'READONLY_STAFF',
} as const;

// 사용자 역할 정의
export const USER_ROLES = {
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR', 
  USER: 'USER',
  VIEWER: 'VIEWER',
} as const;

// 모든 역할
export const ALL_ROLES = {
  ...ADMIN_ROLES,
  ...USER_ROLES,
} as const;

// 관리자 역할별 권한 매핑
export const ADMIN_ROLE_PERMISSIONS: Record<string, Permission[]> = {
  [ADMIN_ROLES.PLATFORM_OWNER]: [
    PLATFORM_PERMISSIONS.ALL,
    PLATFORM_PERMISSIONS.COMPANY_MANAGE,
    PLATFORM_PERMISSIONS.USER_MANAGE,
    PLATFORM_PERMISSIONS.SYSTEM_CONFIG,
    PLATFORM_PERMISSIONS.ANALYTICS,
    PLATFORM_PERMISSIONS.SUPPORT,
    COMPANY_PERMISSIONS.ALL,
    COMPANY_PERMISSIONS.ADMIN_MANAGE,
    COMPANY_PERMISSIONS.COURSE_MANAGE,
    COMPANY_PERMISSIONS.BOOKING_MANAGE,
    COMPANY_PERMISSIONS.USER_MANAGE,
    COMPANY_PERMISSIONS.ANALYTICS,
    COURSE_PERMISSIONS.TIMESLOT_MANAGE,
    COURSE_PERMISSIONS.BOOKING_MANAGE,
    COURSE_PERMISSIONS.CUSTOMER_VIEW,
    COURSE_PERMISSIONS.ANALYTICS_VIEW,
    GENERAL_PERMISSIONS.VIEW_DASHBOARD,
    GENERAL_PERMISSIONS.MANAGE_COMPANIES,
    GENERAL_PERMISSIONS.MANAGE_COURSES,
    GENERAL_PERMISSIONS.MANAGE_TIMESLOTS,
    GENERAL_PERMISSIONS.MANAGE_BOOKINGS,
    GENERAL_PERMISSIONS.MANAGE_USERS,
    GENERAL_PERMISSIONS.MANAGE_ADMINS,
    GENERAL_PERMISSIONS.VIEW_ANALYTICS,
  ],

  [ADMIN_ROLES.PLATFORM_ADMIN]: [
    PLATFORM_PERMISSIONS.COMPANY_MANAGE,
    PLATFORM_PERMISSIONS.USER_MANAGE,
    PLATFORM_PERMISSIONS.ANALYTICS,
    PLATFORM_PERMISSIONS.SUPPORT,
    COMPANY_PERMISSIONS.ALL,
    COMPANY_PERMISSIONS.ADMIN_MANAGE,
    COMPANY_PERMISSIONS.COURSE_MANAGE,
    COMPANY_PERMISSIONS.BOOKING_MANAGE,
    COMPANY_PERMISSIONS.USER_MANAGE,
    COMPANY_PERMISSIONS.ANALYTICS,
    GENERAL_PERMISSIONS.VIEW_DASHBOARD,
    GENERAL_PERMISSIONS.MANAGE_COMPANIES,
    GENERAL_PERMISSIONS.MANAGE_COURSES,
    GENERAL_PERMISSIONS.MANAGE_TIMESLOTS,
    GENERAL_PERMISSIONS.MANAGE_BOOKINGS,
    GENERAL_PERMISSIONS.MANAGE_USERS,
    GENERAL_PERMISSIONS.MANAGE_ADMINS,
    GENERAL_PERMISSIONS.VIEW_ANALYTICS,
  ],

  [ADMIN_ROLES.PLATFORM_SUPPORT]: [
    PLATFORM_PERMISSIONS.SUPPORT,
    COMPANY_PERMISSIONS.USER_MANAGE,
    COMPANY_PERMISSIONS.BOOKING_MANAGE,
    COURSE_PERMISSIONS.BOOKING_MANAGE,
    COURSE_PERMISSIONS.CUSTOMER_VIEW,
    SUPPORT_PERMISSIONS.CUSTOMER_SUPPORT,
    SUPPORT_PERMISSIONS.BOOKING_RECEPTION,
    GENERAL_PERMISSIONS.VIEW_DASHBOARD,
    GENERAL_PERMISSIONS.MANAGE_BOOKINGS,
    GENERAL_PERMISSIONS.MANAGE_USERS,
  ],

  [ADMIN_ROLES.PLATFORM_ANALYST]: [
    PLATFORM_PERMISSIONS.ANALYTICS,
    COMPANY_PERMISSIONS.ANALYTICS,
    COURSE_PERMISSIONS.ANALYTICS_VIEW,
    SUPPORT_PERMISSIONS.READ_ONLY,
    GENERAL_PERMISSIONS.VIEW_DASHBOARD,
    GENERAL_PERMISSIONS.VIEW_ANALYTICS,
  ],

  [ADMIN_ROLES.COMPANY_OWNER]: [
    COMPANY_PERMISSIONS.ALL,
    COMPANY_PERMISSIONS.ADMIN_MANAGE,
    COMPANY_PERMISSIONS.COURSE_MANAGE,
    COMPANY_PERMISSIONS.BOOKING_MANAGE,
    COMPANY_PERMISSIONS.USER_MANAGE,
    COMPANY_PERMISSIONS.ANALYTICS,
    COURSE_PERMISSIONS.TIMESLOT_MANAGE,
    COURSE_PERMISSIONS.BOOKING_MANAGE,
    COURSE_PERMISSIONS.CUSTOMER_VIEW,
    COURSE_PERMISSIONS.ANALYTICS_VIEW,
    GENERAL_PERMISSIONS.VIEW_DASHBOARD,
    GENERAL_PERMISSIONS.MANAGE_COURSES,
    GENERAL_PERMISSIONS.MANAGE_TIMESLOTS,
    GENERAL_PERMISSIONS.MANAGE_BOOKINGS,
    GENERAL_PERMISSIONS.MANAGE_USERS,
    GENERAL_PERMISSIONS.MANAGE_ADMINS,
    GENERAL_PERMISSIONS.VIEW_ANALYTICS,
  ],

  [ADMIN_ROLES.COMPANY_MANAGER]: [
    COMPANY_PERMISSIONS.COURSE_MANAGE,
    COMPANY_PERMISSIONS.BOOKING_MANAGE,
    COMPANY_PERMISSIONS.USER_MANAGE,
    COMPANY_PERMISSIONS.ANALYTICS,
    COURSE_PERMISSIONS.TIMESLOT_MANAGE,
    COURSE_PERMISSIONS.BOOKING_MANAGE,
    COURSE_PERMISSIONS.CUSTOMER_VIEW,
    COURSE_PERMISSIONS.ANALYTICS_VIEW,
    GENERAL_PERMISSIONS.VIEW_DASHBOARD,
    GENERAL_PERMISSIONS.MANAGE_COURSES,
    GENERAL_PERMISSIONS.MANAGE_TIMESLOTS,
    GENERAL_PERMISSIONS.MANAGE_BOOKINGS,
    GENERAL_PERMISSIONS.MANAGE_USERS,
    GENERAL_PERMISSIONS.VIEW_ANALYTICS,
  ],

  [ADMIN_ROLES.COURSE_MANAGER]: [
    COURSE_PERMISSIONS.TIMESLOT_MANAGE,
    COURSE_PERMISSIONS.BOOKING_MANAGE,
    COURSE_PERMISSIONS.CUSTOMER_VIEW,
    COURSE_PERMISSIONS.ANALYTICS_VIEW,
    SUPPORT_PERMISSIONS.BOOKING_RECEPTION,
    SUPPORT_PERMISSIONS.CUSTOMER_SUPPORT,
    GENERAL_PERMISSIONS.VIEW_DASHBOARD,
    GENERAL_PERMISSIONS.MANAGE_TIMESLOTS,
    GENERAL_PERMISSIONS.MANAGE_BOOKINGS,
  ],

  [ADMIN_ROLES.STAFF]: [
    COURSE_PERMISSIONS.BOOKING_MANAGE,
    COURSE_PERMISSIONS.CUSTOMER_VIEW,
    SUPPORT_PERMISSIONS.BOOKING_RECEPTION,
    SUPPORT_PERMISSIONS.CUSTOMER_SUPPORT,
    GENERAL_PERMISSIONS.VIEW_DASHBOARD,
    GENERAL_PERMISSIONS.MANAGE_BOOKINGS,
  ],

  [ADMIN_ROLES.READONLY_STAFF]: [
    COURSE_PERMISSIONS.CUSTOMER_VIEW,
    COURSE_PERMISSIONS.ANALYTICS_VIEW,
    SUPPORT_PERMISSIONS.READ_ONLY,
    GENERAL_PERMISSIONS.VIEW_DASHBOARD,
  ],
};

// 사용자 역할별 권한 매핑
export const USER_ROLE_PERMISSIONS: Record<string, Permission[]> = {
  [USER_ROLES.ADMIN]: [
    // 기본 권한
    USER_PERMISSIONS.PROFILE_VIEW,
    USER_PERMISSIONS.PROFILE_EDIT,
    USER_PERMISSIONS.COURSE_SEARCH,
    USER_PERMISSIONS.COURSE_VIEW,
    USER_PERMISSIONS.TIMESLOT_VIEW,
    // 예약 관리 권한
    USER_PERMISSIONS.BOOKING_CREATE,
    USER_PERMISSIONS.BOOKING_VIEW,
    USER_PERMISSIONS.BOOKING_MODIFY,
    USER_PERMISSIONS.BOOKING_CANCEL,
    USER_PERMISSIONS.BOOKING_HISTORY,
    // 결제 관련 권한
    USER_PERMISSIONS.PAYMENT_VIEW,
    USER_PERMISSIONS.PAYMENT_HISTORY,
    USER_PERMISSIONS.REFUND_REQUEST,
    // 프리미엄 권한
    USER_PERMISSIONS.PREMIUM_BOOKING,
    USER_PERMISSIONS.PRIORITY_BOOKING,
    USER_PERMISSIONS.ADVANCED_SEARCH,
  ],

  [USER_ROLES.MODERATOR]: [
    // 기본 권한
    USER_PERMISSIONS.PROFILE_VIEW,
    USER_PERMISSIONS.PROFILE_EDIT,
    USER_PERMISSIONS.COURSE_SEARCH,
    USER_PERMISSIONS.COURSE_VIEW,
    USER_PERMISSIONS.TIMESLOT_VIEW,
    // 예약 관리 권한
    USER_PERMISSIONS.BOOKING_CREATE,
    USER_PERMISSIONS.BOOKING_VIEW,
    USER_PERMISSIONS.BOOKING_MODIFY,
    USER_PERMISSIONS.BOOKING_CANCEL,
    USER_PERMISSIONS.BOOKING_HISTORY,
    // 결제 관련 권한
    USER_PERMISSIONS.PAYMENT_VIEW,
    USER_PERMISSIONS.PAYMENT_HISTORY,
    USER_PERMISSIONS.REFUND_REQUEST,
    // 프리미엄 권한
    USER_PERMISSIONS.PREMIUM_BOOKING,
    USER_PERMISSIONS.PRIORITY_BOOKING,
    USER_PERMISSIONS.ADVANCED_SEARCH,
  ],

  [USER_ROLES.USER]: [
    // 기본 권한
    USER_PERMISSIONS.PROFILE_VIEW,
    USER_PERMISSIONS.PROFILE_EDIT,
    USER_PERMISSIONS.COURSE_SEARCH,
    USER_PERMISSIONS.COURSE_VIEW,
    USER_PERMISSIONS.TIMESLOT_VIEW,
    // 예약 관리 권한
    USER_PERMISSIONS.BOOKING_CREATE,
    USER_PERMISSIONS.BOOKING_VIEW,
    USER_PERMISSIONS.BOOKING_MODIFY,
    USER_PERMISSIONS.BOOKING_CANCEL,
    USER_PERMISSIONS.BOOKING_HISTORY,
    // 결제 관련 권한
    USER_PERMISSIONS.PAYMENT_VIEW,
    USER_PERMISSIONS.PAYMENT_HISTORY,
    USER_PERMISSIONS.REFUND_REQUEST,
  ],

  [USER_ROLES.VIEWER]: [
    // 기본 권한 (제한적)
    USER_PERMISSIONS.PROFILE_VIEW,
    USER_PERMISSIONS.COURSE_SEARCH,
    USER_PERMISSIONS.COURSE_VIEW,
    USER_PERMISSIONS.TIMESLOT_VIEW,
    // 조회 전용 권한
    USER_PERMISSIONS.BOOKING_VIEW,
    USER_PERMISSIONS.BOOKING_HISTORY,
    USER_PERMISSIONS.PAYMENT_VIEW,
    USER_PERMISSIONS.PAYMENT_HISTORY,
  ],
};

// 프리미엄 사용자 추가 권한
export const PREMIUM_USER_PERMISSIONS = [
  USER_PERMISSIONS.PREMIUM_BOOKING,
  USER_PERMISSIONS.PRIORITY_BOOKING,
  USER_PERMISSIONS.ADVANCED_SEARCH,
];

// 유틸리티 함수들
export function getRolePermissions(role: string, isAdmin: boolean = true): Permission[] {
  if (isAdmin) {
    return ADMIN_ROLE_PERMISSIONS[role] || [];
  } else {
    return USER_ROLE_PERMISSIONS[role] || [];
  }
}

export function getAllAdminPermissions(): Permission[] {
  return ADMIN_PERMISSIONS_ARRAY;
}

export function getAllUserPermissions(): Permission[] {
  return Object.values(USER_PERMISSIONS);
}

export function hasPermission(userPermissions: Permission[], requiredPermission: Permission): boolean {
  return userPermissions.includes(requiredPermission);
}

export function hasAnyPermission(userPermissions: Permission[], requiredPermissions: Permission[]): boolean {
  return requiredPermissions.some(permission => userPermissions.includes(permission));
}

export function hasAllPermissions(userPermissions: Permission[], requiredPermissions: Permission[]): boolean {
  return requiredPermissions.every(permission => userPermissions.includes(permission));
}