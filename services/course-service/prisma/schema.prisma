// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CourseStatus {
  ACTIVE
  INACTIVE
  MAINTENANCE
}

enum RoundType {
  NINE_HOLE
  EIGHTEEN_HOLE
}

enum TimeSlotStatus {
  ACTIVE
  INACTIVE
  BOOKED_OUT
  CANCELLED
}

model Company {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  address     String?
  phoneNumber String?
  email       String?
  website     String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  courses     Course[]
  timeSlotTemplates TimeSlotTemplate[]

  @@map("companies")
}

model Course {
  id              Int                    @id @default(autoincrement())
  name            String
  description     String?
  address         String
  phoneNumber     String?
  status          CourseStatus           @default(ACTIVE)
  companyId       Int
  company         Company                @relation(fields: [companyId], references: [id])
  holes           Hole[]
  
  // 9홀 기준 타임슬롯 관계 (2개 코스만)
  firstCourseTimeSlots   CourseTimeSlot[] @relation("FirstCourseTimeSlots")
  secondCourseTimeSlots  CourseTimeSlot[] @relation("SecondCourseTimeSlots")
  
  weeklySchedules CourseWeeklySchedule[]
  isActive        Boolean                @default(true)
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt

  @@map("courses")
}

model Hole {
  id         Int      @id @default(autoincrement())
  holeNumber Int
  par        Int
  distance   Int?
  courseId   Int
  course     Course   @relation(fields: [courseId], references: [id])
  teeBoxes   TeeBox[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([courseId, holeNumber])
  @@map("holes")
}

model TeeBox {
  id        Int      @id @default(autoincrement())
  name      String
  color     String?
  distance  Int
  holeId    Int
  hole      Hole     @relation(fields: [holeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tee_boxes")
}

model CourseTimeSlot {
  id         Int      @id @default(autoincrement())
  date       String   // YYYY-MM-DD format
  startTime  String   // HH:MM format
  endTime    String   // HH:MM format
  
  // 9홀 기준 라운드 타입 및 코스 조합
  roundType          RoundType @default(EIGHTEEN_HOLE)
  firstCourseId      Int
  secondCourseId     Int?
  
  // 예약 관리 필드
  bookedCount        Int           @default(0)
  availableSlots     Int           @default(4)
  
  // 라운드 타입별 가격
  nineHolePrice      Decimal?      @db.Decimal(10, 2)
  eighteenHolePrice  Decimal       @db.Decimal(10, 2)
  
  // 상태 및 메타데이터
  status             TimeSlotStatus @default(ACTIVE)
  notes              String?
  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // 9홀 기준 관계 (2개 코스)
  firstCourse   Course  @relation("FirstCourseTimeSlots", fields: [firstCourseId], references: [id], onDelete: Cascade)
  secondCourse  Course? @relation("SecondCourseTimeSlots", fields: [secondCourseId], references: [id], onDelete: Cascade)

  @@unique([firstCourseId, secondCourseId, date, startTime, endTime])
  @@index([date, firstCourseId])
  @@index([roundType, status])
  @@map("course_time_slots")
}


model CourseWeeklySchedule {
  id        Int      @id @default(autoincrement())
  dayOfWeek Int // 0=Sunday, 1=Monday, ..., 6=Saturday
  openTime  String // HH:MM format
  closeTime String // HH:MM format
  courseId  Int
  course    Course   @relation(fields: [courseId], references: [id])
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([courseId, dayOfWeek])
  @@map("course_weekly_schedules")
}

model TimeSlotTemplate {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  roundType   RoundType  @default(EIGHTEEN_HOLE)
  
  // 시간 패턴
  timePattern Json       // { intervals: [{ start: "09:00", end: "11:00" }, ...] }
  
  // 9홀 기준 기본값들
  defaultMaxPlayers         Int     @default(4)
  defaultNineHolePrice      Decimal @db.Decimal(10, 2)
  defaultEighteenHolePrice  Decimal @db.Decimal(10, 2)
  
  companyId   Int
  company     Company    @relation(fields: [companyId], references: [id])
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("time_slot_templates")
}


model TimeSlotGenerationLog {
  id            Int      @id @default(autoincrement())
  adminId       Int?     // 생성한 관리자 ID
  templateId    Int?     // 사용된 템플릿 ID
  
  generationConfig Json  // 생성 설정 저장
  slotsCreated     Int   // 생성된 슬롯 수
  dateRange        Json  // { start: "2024-01-01", end: "2024-01-31" }
  
  createdAt     DateTime @default(now())

  @@map("time_slot_generation_logs")
}
